{{~outNumber "number"}}
{{~outBool "boolean"}}
{{~outString "string"}}
{{~outMap "object" ~}}
/**
 * This file is automatically generated using launchdarkly-code-generation tool.
 * Do not modify this file -- YOUR CHANGES WILL BE ERASED!
 */

import { LDUser, LDClient } from 'launchdarkly-node-server-sdk';

/** Class containing functions of all LaunchDarkly flags with default values mapped. */
export class LDFlags {
  private readonly ldClient: LDClient;
  /**
   * @param {LDClient} ldClient - pass in a LDClient for all flags to use in evaluation.
   */
  constructor(ldClient: LDClient) {
    this.ldClient = ldClient;
  }

  {{#each flags.items}}
  /**
  {{#if this.name}}
   * {{ this.name }}
   *
  {{/if~}}
  {{#if this.description}}
   * {{ this.description }}
  {{/if}}
   */
  async {{lowerCamelCase this.key}}(user: LDUser): Promise<{{ returnCheck this }}> {
    return this.ldClient.variation('{{ this.key }}', user, {{{ defaultValue this "single" }}});
  }
  {{#unless @last}}

  {{/unless}}
  {{~/each~}}
  {{#each localFlags }}
  async {{lowerCamelCase Flag}}(user: LDUser): Promise<{{ localType Type }}> {
    return this.ldClient.variation('{{ Flag }}', user, {{{ localValue Default Type "single" }}});
  }
  {{~/each~}}
}
